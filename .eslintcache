[{"E:\\Kruti\\learnreact\\propertylist\\src\\index.js":"1","E:\\Kruti\\learnreact\\propertylist\\src\\App.js":"2","E:\\Kruti\\learnreact\\propertylist\\src\\reportWebVitals.js":"3","E:\\Kruti\\learnreact\\propertylist\\src\\components\\Addproperty.js":"4","E:\\Kruti\\learnreact\\propertylist\\src\\components\\data\\data.js":"5","E:\\Kruti\\learnreact\\propertylist\\src\\components\\Navbar.js":"6","E:\\Kruti\\learnreact\\propertylist\\src\\components\\Properties.js":"7","E:\\Kruti\\learnreact\\propertylist\\src\\components\\Property.js":"8","E:\\Kruti\\learnreact\\propertylist\\src\\components\\Filters.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":590,"mtime":1611486350101,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":4939,"mtime":1611547122024,"results":"14","hashOfConfig":"11"},{"size":5896,"mtime":1611559353198,"results":"15","hashOfConfig":"11"},{"size":590,"mtime":1611470879874,"results":"16","hashOfConfig":"11"},{"size":4110,"mtime":1611559209743,"results":"17","hashOfConfig":"11"},{"size":2659,"mtime":1611546728740,"results":"18","hashOfConfig":"11"},{"size":1604,"mtime":1611297497217,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fnx9c5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"E:\\Kruti\\learnreact\\propertylist\\src\\index.js",[],["42","43"],"E:\\Kruti\\learnreact\\propertylist\\src\\App.js",[],"E:\\Kruti\\learnreact\\propertylist\\src\\reportWebVitals.js",[],"E:\\Kruti\\learnreact\\propertylist\\src\\components\\Addproperty.js",["44","45"],"import React,{Component,useState,useEffect} from 'react'\r\nimport {properties} from './data/data';\r\n\r\n\r\n class Addproperty extends Component {\r\n    constructor(props){\r\n    super(props);\r\n        this.state={\r\n        propertyname:'',\r\n        description:'',\r\n        address:'',\r\n        locality:'',\r\n        price:'',\r\n        bedroom:'',\r\n        bath:'',\r\n        carpetarea:'',\r\n        \r\n    }}\r\n\r\n    ChangeHandler = (e) =>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n         console.log(this.state.pictues);\r\n    }\r\n    submitHandler=(e)=>{\r\n        e.preventDefault();\r\n        properties.push(this.state);\r\n        // console.log(properties);\r\n    }   \r\n    render(){\r\n    return (\r\n        <div class=\"background\">\r\n        <div class=\"regiform\">\r\n        <div className=\"formcontainer \">\r\n            \r\n            <form onSubmit={this.submitHandler}>\r\n            <div className=\"formfields\">\r\n                <div className=\"labelcontainer\">\r\n                <label>Property Name :</label>\r\n                <br></br>\r\n                <input\r\n                type=\"text\"\r\n                value={this.state.propertyname}\r\n                onChange={this.ChangeHandler}\r\n                className=\"textinput\"\r\n                placeholder=\"name of your property\"\r\n                name=\"propertyname\"\r\n                />\r\n                </div>\r\n                {/* <div style={{ fontSize: 12, color: 'red' }} >{formErr.nameErr}</div> */}\r\n                <div>\r\n                <label>Description :</label>\r\n                <br></br>\r\n                <textarea\r\n                type=\"textarea\"\r\n                rows=\"3\"\r\n                value={this.state.description}\r\n                onChange={this.ChangeHandler}\r\n                className=\"textinput\"\r\n                placeholder=\"about porperty\"\r\n                name=\"description\"\r\n                />\r\n                </div>\r\n                <div>\r\n                <label>Address :</label>\r\n                <br></br>\r\n                <input\r\n                type=\"text\"\r\n                value={this.state.address}\r\n                onChange={this.ChangeHandler}\r\n                className=\"textinput\"\r\n                placeholder=\"address\"\r\n                name=\"address\"\r\n                />\r\n                </div>\r\n                <div>\r\n                <label>Locality :</label>\r\n                <br></br>\r\n                <input\r\n                type=\"text\"\r\n                value={this.state.locality}\r\n                onChange={this.ChangeHandler}\r\n                className=\"textinput\"\r\n                placeholder=\"locality\"\r\n                name=\"locality\"\r\n                />\r\n                </div>\r\n                <div>\r\n                <label>Price :</label>\r\n                <br></br>\r\n                <input\r\n                type=\"text\"\r\n                value={this.state.price}\r\n                onChange={this.ChangeHandler}\r\n                className=\"textinput\"\r\n                placeholder=\"in Rupess\"\r\n                name=\"price\"\r\n                />\r\n                </div>\r\n                <div>\r\n                <label>Bedroom :</label>\r\n                <br></br>\r\n                <input\r\n                type=\"number\"\r\n                value={this.state.bedroom}\r\n                onChange={this.ChangeHandler}\r\n                className=\"textinput\"\r\n                placeholder=\"enter numbers only\"\r\n                name=\"bedroom\"\r\n                />\r\n                </div>\r\n                <div>\r\n                <label>Bath :</label>\r\n                <br></br>\r\n                <input\r\n                type=\"number\"\r\n                value={this.state.bath}\r\n                onChange={this.ChangeHandler}\r\n                className=\"textinput\"\r\n                placeholder=\"enter numbers only\"\r\n                name=\"bath\"\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <label>Carprt Area :</label>\r\n                <br></br>\r\n                <input\r\n                type=\"number\"\r\n                value={this.state.carpetarea}\r\n                onChange={this.ChangeHandler}\r\n                className=\"textinput\"\r\n                placeholder=\"enter in Sq ft\"\r\n                name=\"carpetarea\"\r\n                />\r\n                </div>\r\n                <div>\r\n                    <label>Upload Image : </label>\r\n                    <br></br>\r\n                    <input type=\"file\" \r\n                            name=\"picture\"\r\n                            value={this.state.pictues}\r\n                            onChange={this.ChangeHandler}\r\n                    ></input>\r\n                    <br></br>\r\n                   \r\n                </div>\r\n\r\n\r\n                <div>\r\n            <button type=\"submit\" className=\"btn\">Go</button>\r\n          </div>\r\n          </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Addproperty ","E:\\Kruti\\learnreact\\propertylist\\src\\components\\data\\data.js",[],"E:\\Kruti\\learnreact\\propertylist\\src\\components\\Navbar.js",[],"E:\\Kruti\\learnreact\\propertylist\\src\\components\\Properties.js",["46"],"E:\\Kruti\\learnreact\\propertylist\\src\\components\\Property.js",["47","48"],"import React, { Component } from 'react'\r\n\r\n\r\nclass Property extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            unit:\"Sq-ft\",\r\n            ncarpetarea:props.property.carpetarea\r\n        }\r\n    }\r\n\r\n\r\n    displayarea = (e) =>{\r\n        if(this.state.unit===\"Sq-ft\")\r\n        {\r\n            return this.state.ncarpetarea\r\n        }\r\n        if(this.state.unit===\"Sq-yrd\")\r\n        {\r\n            return (this.state.ncarpetarea*0.1)\r\n        }\r\n        if(this.state.unit===\"Sq-m\")\r\n        {\r\n            return (this.state.ncarpetarea*0.09)\r\n        }\r\n    }\r\n    ChangeHandler = (e) =>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {propertyname,description,address,locality,price,bedroom,bath,carpetarea,pictures}=this.props.property;\r\n        \r\n        return (\r\n            <div >\r\n                <div>\r\n                <div className=\"flexcontainer\">\r\n                    <div className=\"flexright\">\r\n\r\n                    <img src={pictures} alt=\"image \"  className=\"homeimg\"></img>\r\n                    </div>\r\n                    <div className=\"flexleft\">\r\n                        <h4 className=\"price\">{price}</h4>\r\n                        <h5>{propertyname}</h5>\r\n                        <p></p>\r\n                        {/* <h5>Price :</h5> */}\r\n                        <p>Description :{description} </p>\r\n                        <p></p>\r\n                        <p>Locality :{locality} </p>\r\n                        <p></p>\r\n                        <p>Address :{address}</p>\r\n                        <p></p>\r\n                        <p>Carprt Area: <span>{this.displayarea ()}</span>\r\n                            <select value={this.state.unit} \r\n                                    name=\"unit\"\r\n                                    className=\"unitdropdown\"\r\n                                     onChange={this.ChangeHandler} >\r\n                                <option value=\"Sq-ft\">Sq-ft</option>\r\n                                <option value=\"Sq-yrd\">Sq-yrd</option>\r\n                                <option value=\"Sq-m\">Sq-m</option>\r\n                            </select>\r\n                        </p>\r\n                        <p></p>\r\n                        <p>Bedroom : {bedroom}</p>\r\n                        <p></p>\r\n                        <p>Bath:{bath}</p>\r\n                        <p></p>\r\n                        {/* <i class=\"fas fa-star\"></i> */}\r\n                    </div>\r\n                    \r\n                \r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Property\r\n","E:\\Kruti\\learnreact\\propertylist\\src\\components\\Filters.js",[],["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":25,"nodeType":"57","messageId":"58","endLine":1,"endColumn":33},{"ruleId":"55","severity":1,"message":"59","line":1,"column":34,"nodeType":"57","messageId":"58","endLine":1,"endColumn":43},{"ruleId":"60","severity":1,"message":"61","line":34,"column":56,"nodeType":"62","messageId":"63","endLine":34,"endColumn":58},{"ruleId":"55","severity":1,"message":"64","line":33,"column":77,"nodeType":"57","messageId":"58","endLine":33,"endColumn":87},{"ruleId":"65","severity":1,"message":"66","line":41,"column":21,"nodeType":"67","endLine":41,"endColumn":75},{"ruleId":"51","replacedBy":"68"},{"ruleId":"53","replacedBy":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'carpetarea' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["70"],["71"],"no-global-assign","no-unsafe-negation"]